#!/usr/bin/env node

let argv = {_: process.argv.slice(2)}//require('minimist')(process.argv.slice(2))
let download = require('./download')
let bitdb = require('./bitdb')

let action = argv._[0]
let url = argv._[1]
if (!url) { url = action; action = 'status' }
url = url.split('://')
let type, path, id, dkey
if (url[1]) {
	type = url[0].toUpperCase()
	path = url[1].split('/')
	id = path.shift()
	dkey = path.join('/')
} else {
	path = url[0]
	id = url[0]
}

if (action == 'status') {
	if (type == 'TX') {
		download.txstatus(id)
	} else if (type == 'D') {
		if (dkey) {
			download.dstatus(id, dkey)
		} else {
			download.dlog(id)
		}
	} else if (type == 'BCAT') {
		download.bcatstatus(id)
	} else if (type == 'C') {
		download.cstatus(id)
	}
} else if (action == 'stream') {
	if (type == 'BCAT') {
		download.bcatstream(id, process.stdout)
	}
} else if (action == 'download') {
	if (type == 'D') {
		download.ddownload(id, dkey)
	}
} else if (action == 'bitdb') {
	(async () => {
		let r = await bitdb.bitdb(JSON.parse(argv._[1]))
		console.log(JSON.stringify(r))
	})()
}


